{"ast":null,"code":"import { HttpErrorResponse } from \"@angular/common/http\";\nimport { ForecastWeatherModel } from \"./forecast-weather.model\";\nimport { exhaustMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared/data-storage.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction ForecastWeatherComponent_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 6);\n    i0.ɵɵelementStart(1, \"li\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const condition_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\" \", condition_r1.timeWeather, \": \", condition_r1.weatherConditions, \" - Min: \", condition_r1.minTemperature, \" - Max: \", condition_r1.maxTemperature, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", condition_r1.icon, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let ForecastWeatherComponent = /*#__PURE__*/(() => {\n  class ForecastWeatherComponent {\n    constructor(router, route, dataStorageService) {\n      this.router = router;\n      this.route = route;\n      this.dataStorageService = dataStorageService;\n      this.forcastWeathers = new ForecastWeatherModel('', []);\n    }\n\n    ngOnInit() {\n      this.paramsSubscription = this.route.params.pipe(exhaustMap(params => {\n        this.zipCode = params['zipcode'];\n        return this.dataStorageService.getForecastWeather(this.zipCode);\n      })).subscribe(forcastWeathers => {\n        this.forcastWeathers = forcastWeathers;\n      }, error => {\n        let messageError = '';\n\n        if (error instanceof HttpErrorResponse) {\n          messageError = error.message;\n        } else {\n          messageError = error;\n        }\n\n        this.dataStorageService.errorDisplaying.next(messageError);\n      });\n    }\n\n    onBackToMainPage() {\n      this.router.navigate([''], {\n        relativeTo: this.route\n      });\n    }\n\n    ngOnDestroy() {\n      this.paramsSubscription.unsubscribe();\n    }\n\n  }\n\n  ForecastWeatherComponent.ɵfac = function ForecastWeatherComponent_Factory(t) {\n    return new (t || ForecastWeatherComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DataStorageService));\n  };\n\n  ForecastWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForecastWeatherComponent,\n    selectors: [[\"app-forecast-weather\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"container-fluid\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-title\"], [\"class\", \"list-group\", 4, \"ngFor\", \"ngForOf\"], [\"tabindex\", \"0\", \"id\", \"mainPageBtn\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"list-group\"], [1, \"list-group-item\"], [1, \"icon\", 3, \"src\"]],\n    template: function ForecastWeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h3\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, ForecastWeatherComponent_ul_5_Template, 4, 5, \"ul\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ForecastWeatherComponent_Template_button_click_6_listener() {\n          return ctx.onBackToMainPage();\n        });\n        i0.ɵɵtext(7, \"< Back to main page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"5-day forecast for \", ctx.forcastWeathers.locationName, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.forcastWeathers.conditions);\n      }\n    },\n    directives: [i3.NgForOf],\n    styles: [\".icon[_ngcontent-%COMP%]{width:45px;height:45px;position:absolute;right:20px;top:-2px}\"]\n  });\n  return ForecastWeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}